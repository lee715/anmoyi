// Generated by CoffeeScript 1.9.1
(function() {
  var xss;

  xss = require('xss');

  module.exports = function(Schema, options) {
    var EventSchema, ReminderSchema;
    ReminderSchema = new Schema({
      minutes: Number,
      format: String,
      method: String
    });
    EventSchema = new Schema({
      _creatorId: {
        type: Schema.Types.ObjectId,
        ref: 'User'
      },
      title: {
        es_indexed: true,
        es_analyzer: 'ik',
        type: String,
        "default": '',
        get: function(val) {
          if (val != null) {
            return xss(val);
          } else {
            return val;
          }
        }
      },
      content: {
        es_indexed: true,
        es_analyzer: 'ik_smart',
        type: String,
        "default": '',
        get: function(val) {
          if (val != null) {
            return xss(val);
          } else {
            return val;
          }
        }
      },
      location: {
        es_indexed: true,
        es_analyzer: 'ik_smart',
        type: String,
        "default": '',
        get: function(val) {
          if (val != null) {
            return xss(val);
          } else {
            return val;
          }
        }
      },
      startDate: {
        es_indexed: true,
        type: Date
      },
      endDate: {
        es_indexed: true,
        type: Date
      },
      untilDate: {
        es_indexed: true,
        type: Date
      },
      status: {
        type: String,
        "default": 'confirmed'
      },
      involveMembers: [
        {
          es_indexed: true,
          type: Schema.Types.ObjectId,
          ref: 'User'
        }
      ],
      _projectId: {
        es_indexed: true,
        type: Schema.Types.ObjectId,
        ref: 'Project'
      },
      source: String,
      _sourceId: String,
      sourceCalendarId: String,
      sourceEvent: Object,
      sourceDate: Date,
      recurrence: {
        type: Schema.Types.Mixed
      },
      reminders: [ReminderSchema],
      isArchived: {
        es_indexed: true,
        type: String,
        "default": null
      },
      visiable: {
        es_indexed: true,
        type: String,
        "default": 'all'
      },
      isDeleted: {
        es_indexed: true,
        type: Boolean,
        "default": false
      },
      created: {
        es_indexed: true,
        type: Date,
        "default": Date.now
      },
      updated: {
        es_indexed: true,
        type: Date,
        "default": Date.now
      },
      tagIds: [
        {
          type: Schema.Types.ObjectId,
          ref: 'Tag'
        }
      ]
    }, {
      read: 'secondaryPreferred',
      toObject: {
        virtuals: true,
        getters: true
      },
      toJSON: {
        virtuals: true,
        getters: true
      }
    });
    return EventSchema;
  };

}).call(this);
