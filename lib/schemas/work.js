// Generated by CoffeeScript 1.9.1
(function() {
  var xss;

  xss = require('xss');

  module.exports = function(Schema, options) {
    var WorkSchema;
    WorkSchema = new Schema({
      title: {
        type: String,
        get: function(val) {
          if (val != null) {
            return xss(val);
          } else {
            return val;
          }
        }
      },
      description: {
        es_indexed: true,
        es_analyzer: 'ik_smart',
        type: String,
        get: function(val) {
          if (val != null) {
            return xss(val);
          } else {
            return val;
          }
        }
      },
      fileName: {
        es_indexed: true,
        es_analyzer: 'ik',
        type: String,
        get: function(val) {
          if (val != null) {
            return xss(val);
          } else {
            return val;
          }
        }
      },
      fileType: {
        es_indexed: true,
        type: String,
        get: function(val) {
          if (val != null) {
            return xss(val);
          } else {
            return val;
          }
        }
      },
      fileSize: {
        es_indexed: true,
        type: Number
      },
      fileKey: {
        es_indexed: true,
        type: String
      },
      fileCategory: String,
      imageWidth: Number,
      imageHeight: Number,
      source: {
        type: String,
        "default": 'teambition',
        get: function(val) {
          if (val === 'striker2') {
            return 'striker';
          }
          return val;
        }
      },
      created: {
        type: Date,
        "default": Date.now
      },
      lastVersionTime: {
        type: Date,
        "default": Date.now
      },
      updated: {
        type: Date,
        "default": Date.now
      },
      involveMembers: [
        {
          type: Schema.Types.ObjectId,
          ref: 'User'
        }
      ],
      isDeleted: {
        type: Boolean,
        "default": false
      },
      isArchived: {
        type: String,
        "default": null
      },
      _creatorId: {
        type: Schema.Types.ObjectId,
        ref: 'User'
      },
      _parentId: {
        type: Schema.Types.ObjectId,
        ref: 'Collection'
      },
      _projectId: {
        type: Schema.Types.ObjectId,
        ref: 'Project'
      },
      downloadUrl: {
        type: String
      },
      thumbnailUrl: {
        type: String
      },
      visiable: {
        type: String,
        "default": 'all'
      },
      tagIds: [
        {
          type: Schema.Types.ObjectId,
          ref: 'Tag'
        }
      ]
    }, {
      read: 'secondaryPreferred',
      toObject: {
        virtuals: true,
        getters: true
      },
      toJSON: {
        virtuals: true,
        getters: true
      }
    });
    return WorkSchema;
  };

}).call(this);
