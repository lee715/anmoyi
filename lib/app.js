// Generated by CoffeeScript 1.9.1
(function() {
  var Promise, U, WX_API, app, bodyParser, config, db, errSrv, express, mejs, redis, session;

  config = require('config');

  express = require('express');

  bodyParser = require('body-parser');

  errSrv = require('./services/err');

  Promise = require('bluebird');

  mejs = require('mejs');

  require('./services/limbo');

  db = require('limbo').use('anmoyi');

  redis = require('./services/redis');

  U = require('./services/util');

  Promise.promisifyAll(redis);

  Promise.promisifyAll(db);

  WX_API = require('./weixin/api');

  session = require('cookie-session');

  app = express();

  app.set('view', mejs.initView("public/templates/*.ejs"));

  app.use(express["static"]('public'));

  app.use(bodyParser.json());

  app.use(bodyParser.urlencoded({
    extended: true
  }));

  app.use(express.query());

  app.use(require('express-xml-bodyparser')());

  app.use(require('cookie-parser')());

  app.use(session(config.sessionConfig));

  app.use('/wx/notify', WX_API.useWXCallback(function(msg, req, res, next) {
    console.log('/wx/notify', msg);
    return db.order.updateAsync({
      _id: msg.out_trade_no
    }, {
      status: "SUCCESS"
    }, {
      upsert: false,
      "new": false
    }).then(function() {
      return res.success();
    });
  }));

  app.get('/api/test', function(req, res, next) {
    console.log(req.query);
    return res.send('ok');
  });

  require('./router')(app, require('./api'), [], '/api');

  require('./router')(app, require('./wxapi'), []);

  require('./services/socket');

  require('./weixin/mpApi').setupMpTicket(function(err) {
    if (err) {
      return console.log(err);
    }
  });

  require('./weixin/api').createMenu();

  app.get('*', function(req, res, next) {
    return res.render('index');
  });

  app.listen(config.PORT);

  console.log("Listen on " + config.PORT);

}).call(this);
