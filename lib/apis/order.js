// Generated by CoffeeScript 1.9.1
(function() {
  var API, _, db, u;

  _ = require('lodash');

  db = require('limbo').use('anmoyi');

  u = require('../services/util');

  API = (function() {
    function API() {}

    API.prototype.getOrders = function(req, callback) {
      var _userId;
      _userId = req.session._userId;
      return db.user.findOneAsync({
        _id: _userId
      }).then(function(user) {
        var cons;
        if (user.hasOrder()) {
          if (user.role > 5) {
            cons = {};
          } else {
            cons = {
              _userId: user._id
            };
          }
          return db.order.findAsync(cons);
        } else {
          return [];
        }
      }).then(function(orders) {
        var alienMap, openIds;
        alienMap = {};
        openIds = _.pluck(orders, 'openId');
        console.log('getOrders.openIds', openIds);
        return db.alien.findAsync({
          openId: {
            $in: openIds
          }
        }).then(function(aliens) {
          console.log('getOrders.aliens', aliens);
          aliens.forEach(function(alien) {
            return alienMap[alien.openId] = alien;
          });
          orders = orders.map(function(order) {
            console.log(alienMap[order.openId].name);
            order = order.toJSON();
            order.username = alienMap[order.openId].name;
            return order;
          });
          return callback(null, orders);
        });
      })["catch"](function(e) {
        console.log(e);
        return callback(new Error('systemErr'));
      });
    };

    API.prototype.getOrders.route = ['get', '/orders'];

    return API;

  })();

  module.exports = new API;

}).call(this);
