// Generated by CoffeeScript 1.10.0
(function() {
  var API, _, db, u, userSrv;

  _ = require('lodash');

  db = require('limbo').use('anmoyi');

  u = require('../services/util');

  userSrv = require('../services/user');

  API = (function() {
    function API() {}

    API.prototype.create = function(req, callback) {
      var data;
      data = req.body;
      return db.place.createAsync(data).then(function(place) {
        return callback(null, place.toJSON());
      });
    };

    API.prototype.create.route = ['post', '/places'];

    API.prototype.create.before = [userSrv.isRoot];

    API.prototype.update = function(req, callback) {
      var _id;
      _id = req.body._id;
      return db.place.findOneAndUpdate({
        _id: _id
      }, req.body, {
        "new": false,
        upsert: false
      }, callback);
    };

    API.prototype.update.route = ['put', '/places'];

    API.prototype.update.before = [userSrv.isRoot];

    API.prototype.get = function(req, callback) {
      var cons, user;
      user = req._data.user;
      if (user.role === 'root') {
        cons = {};
      } else {
        cons = {
          _agentId: user._id
        };
      }
      return db.place.findAsync(cons).then(function(places) {
        return callback(null, _.map(places, function(place) {
          return place.format();
        }));
      });
    };

    API.prototype.get.route = ['get', '/places'];

    API.prototype.get.before = [userSrv.isAgent];

    return API;

  })();

  module.exports = new API;

}).call(this);
