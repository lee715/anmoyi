// Generated by CoffeeScript 1.10.0
(function() {
  var MP_API, _, config, db, moment, qs, redis, sendPayTmp, sendPayTmp2, sockSrv, subscribe, weixinAPI;

  weixinAPI = require('./api');

  MP_API = require('./mpApi');

  redis = require('../services/redis');

  db = require('limbo').use('anmoyi');

  qs = require('qs');

  config = require('config');

  sockSrv = require('../services/socket');

  moment = require('moment');

  _ = require('lodash');

  subscribe = function(message, words) {
    return weixinAPI.sendMessage(message.fromusername, words || "感谢使用\"轻松驿客\"。\n\n在使用过程中遇到任何疑问请在公众号内留言或致电4009986682.\n我们会竭诚为您服务。\n\n轻松驿客祝您生活愉快~");
  };

  sendPayTmp = function(uid, fromusername) {
    return db.device.findOne({
      uid: uid
    }, function(err, device) {
      var info;
      if (err || !device) {
        return subscribe("设备未找到，请联系管理员");
      } else {
        redis.setex("PAYINFO." + fromusername, 60 * 60, device.uid, function() {});
        info = device.getPayInfo();
        return weixinAPI.sendTemplateMessage({
          touser: fromusername,
          template_id: config.MP_WEIXIN.templateIDs.pay,
          url: "" + config.host + config.h5.pay + "?openid=" + fromusername,
          topcolor: "#ff0000",
          data: {
            first: {
              value: "请点击这里进入微信安全支付"
            },
            keyword1: {
              value: "" + (device.name || '1号')
            },
            keyword2: {
              value: (info.cost + " 元") || "5元"
            },
            remark: {
              value: "支付完成后请点击下方的“启动”按钮"
            }
          }
        });
      }
    });
  };

  sendPayTmp2 = function(_placeId, fromusername) {
    return db.place.findOne({
      _id: _placeId
    }, function(err, place) {
      if (err || !place) {
        return subscribe("场地未找到，请联系管理员");
      }
      return weixinAPI.sendTemplateMessage({
        touser: fromusername,
        template_id: config.MP_WEIXIN.templateIDs.pay,
        url: "" + config.host + config.h5.page + "?openid=" + fromusername + "&_placeId=" + _placeId,
        topcolor: "#ff0000",
        data: {
          first: {
            value: "请点击这里进入支付操作界面"
          },
          keyword1: {
            value: "" + place.name
          },
          keyword2: {
            value: ""
          },
          remark: {
            value: ""
          }
        }
      });
    });
  };

  module.exports = function(message) {
    var action, event, eventkey, fromusername, ref, today, total, type, uid;
    type = message.msgtype;
    event = message.event;
    eventkey = message.eventkey;
    console.log(type, event, eventkey);
    fromusername = message.fromusername;
    weixinAPI.getUserInfo(fromusername, function(err, user) {
      return db.alien.findOneAsync({
        openId: fromusername
      }).then(function(alien) {
        if (!alien) {
          return db.alien.createAsync({
            openId: fromusername,
            name: user.nickname,
            city: user.city,
            province: user.province,
            country: user.country
          });
        } else {
          alien.openId = fromusername;
          alien.name = user.nickname;
          alien.city = user.city;
          alien.province = user.province;
          alien.country = user.country;
          return alien.saveAsync();
        }
      })["catch"](function(e) {
        return console.log('alien', e);
      });
    });
    if (type === 'event') {
      if (event === 'subscribe') {
        subscribe(message);
        if (/^qrscene/.test(eventkey)) {
          ref = eventkey.split('_'), action = ref[0], uid = ref[1];
          return sendPayTmp(uid, fromusername);
        }
      } else if (event === 'SCAN') {
        uid = eventkey;
        if (uid.length === 12) {
          return sendPayTmp(uid, fromusername);
        } else if (uid.length === 24) {
          return sendPayTmp2(uid, fromusername);
        }
      } else if (event === 'unsubscribe') {
        return console.log('unsubscribe');
      } else if (event === 'CLICK') {
        if (eventkey === 'how_to_use') {
          return subscribe(message, "您好！\n1、扫描(请用微信扫描二维码，并关注公众号)；\n2、支付(点击弹出的链接对话框进入支付页面)；\n3、点击“完成”(成功支付后，点击“完成”以启动按摩椅)\n\n请注意：\n二维码仅对所在的那台设备有效，如您更换了座位，请重新扫描。\n如需续费，请重新扫描并支付即可。\n\n任何疑问请致电4009986682，谢谢！");
        } else if (eventkey === 'notice') {
          return subscribe(message, "★★以下情形及人士禁止使用本机★★\n◎儿童、孕妇及高龄人士\n◎处于经期的女士\n◎酒后或饮食过饱时\n◎当您身体有任何疾病时\n◎体重超过120千克之人士\n◎安装有植入式医疗器械之人士\n◎当您发现本机面料|电源线|控制面板\n  有任何损坏时，禁止使用。\n\n★★发生以下情形请立即停止使用★★\n◎使用过程中如您感到任何不适，请立即停止使用！\n◎本机仅供单人使用，严禁2人或多人同时使用！\n◎严禁坐在按摩椅扶手上！以免发生意外！\n\n★★温馨提示★★\n◎本机为投币式全自动按摩椅\n◎使用前请务必阅读注意事项\n◎足额投币后按摩椅自动运行\n◎贴近靠背乘坐以获得最佳体验\n◎请妥善保管好您的随身物品\n◎禁止在按摩椅上吸烟\n◎使用按摩椅时请勿饮食");
        } else if (eventkey === 'more_info') {
          return subscribe(message, "您好，如有任何疑问或者建议，请致电4009986682，或留言，我们会及时回复您的信息，谢谢！");
        } else if (eventkey === 'start') {
          today = moment().startOf('day').toDate();
          total = {};
          return db.order.findAsync({
            openId: fromusername,
            created: {
              $gt: today
            },
            status: 'SUCCESS',
            serviceStatus: {
              $ne: 'STARTED'
            }
          }).then(function(orders) {
            total.unstarted = orders.length;
            return orders;
          }).map(function(order) {
            return sockSrv.startAsync(order.uid, order.time).then(function(state) {
              if (state) {
                order.serviceStatus = 'STARTED';
                return order.saveAsync().then(function() {
                  return db.device.updateAsync({
                    uid: order.uid
                  }, {
                    status: 'work'
                  }, {
                    upsert: false,
                    "new": false
                  });
                });
              }
            });
          }).then(function() {
            return db.order.findAsync({
              openId: fromusername,
              created: {
                $gt: today
              },
              status: 'PREPAY'
            });
          }).map(function(order) {
            return weixinAPI.queryOrderAsync({
              out_trade_no: "" + order._id
            }).then(function(wx_order) {
              if (wx_order.trade_state === 'SUCCESS') {
                order.status = "SUCCESS";
                return sockSrv.startAsync(order.uid, order.time).then(function(state) {
                  if (state) {
                    order.serviceStatus = 'STARTED';
                    return order.saveAsync().then(function() {
                      return db.device.updateAsync({
                        uid: order.uid
                      }, {
                        status: 'work'
                      }, {
                        upsert: false,
                        "new": false
                      });
                    });
                  }
                }).then(function() {
                  return wx_order.trade_state;
                });
              } else {
                return '';
              }
            });
          }).then(function(rt) {
            var msg;
            total.prepay = rt.length;
            rt = _.compact(rt);
            total.unpayed = rt.length;
            if (total.unstarted || total.unpayed) {
              msg = "找到 " + total.unstarted + " 条已付款未启动的设备，正在为您自动启动\n找到 " + total.unpayed + " 条未确认状态的订单，已成功标记订单状态，并自动启动设备\n如仍有问题，请致电4009986682，谢谢！";
              return subscribe(message, msg);
            } else {
              return redis.getAsync("PAYINFO." + fromusername).then(function(payinfo) {
                if (payinfo) {
                  msg = "您好！请点击上面的链接，成功支付后，点击“完成”，按摩椅会自行启动。\n如果按摩椅没有自行启动，请点击“启动”按钮。\n其他问题，请致电4009986682，谢谢！";
                } else {
                  msg = "您好！\n请扫描您所乘坐的按摩椅上的二维码，成功支付后，点击“完成”，按摩椅会自行启动。\n如果按摩椅没有自行启动，请点击“启动”按钮。\n其他问题，请致电4009986682，谢谢！";
                }
                return subscribe(message, msg);
              });
            }
          })["catch"](function(e) {
            return console.log(e.stack);
          });
        }
      }
    } else if (type === 'text') {
      return subscribe(message);
    }
  };

}).call(this);
