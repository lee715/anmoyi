// Generated by CoffeeScript 1.9.1
(function() {
  var extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },
    hasProp = {}.hasOwnProperty;

  define(['backbone', 'underscore', 'text!templates/login.ejs', 'text!templates/warn.ejs', 'utils', 'data', 'ejs'], function(B, _, temp, warn, utils, Data) {
    var AuthErr, View;
    AuthErr = {
      user: '用户不存在',
      password: '密码错误'
    };
    return View = (function(superClass) {
      extend(View, superClass);

      function View() {
        return View.__super__.constructor.apply(this, arguments);
      }

      View.prototype.initialize = function() {
        return this.render();
      };

      View.prototype.events = {
        'submit form': 'onSubmit'
      };

      View.prototype.render = function() {
        var self;
        self = this;
        self.$el.html(ejs.render(temp));
        return this.$form = this.$el.find('form');
      };

      View.prototype.showAlert = function(state, err) {
        var note;
        if (state === 'success') {
          return Data.app.navigate('/devices');
        } else {
          note = err || '登陆失败，请检查';
          return Essage.show({
            message: note,
            status: 'error'
          });
        }
      };

      View.prototype.onSubmit = function(e) {
        var data, self;
        e.preventDefault();
        self = this;
        data = utils.formData($(e.target));
        $.ajax({
          url: '/api/login',
          data: data,
          json: true,
          method: 'post'
        }).done(function(res, state) {
          Data.storeUser(res);
          return Data.home();
        }).fail(function(req, state, err) {
          if (req.status === 401) {
            return self.showAlert(state, AuthErr[req.responseText]);
          }
        });
        return false;
      };

      return View;

    })(B.View);
  });

}).call(this);
