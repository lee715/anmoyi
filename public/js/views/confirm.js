// Generated by CoffeeScript 1.9.1
(function() {
  var extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },
    hasProp = {}.hasOwnProperty;

  define(['jquery', 'backbone', 'text!templates/confirm.ejs'], function($, B, temp) {
    var View;
    return View = (function(superClass) {
      extend(View, superClass);

      function View() {
        return View.__super__.constructor.apply(this, arguments);
      }

      View.prototype.initialize = function(opts) {
        var base;
        this.opts = opts || {};
        (base = this.opts).btns || (base.btns = {});
        this.render(opts);
        return this;
      };

      View.prototype.events = {
        'click .confirm': 'confirm',
        'click .cancel': 'cancel'
      };

      View.prototype.render = function(opts) {
        this.$el.html(ejs.render(temp, opts));
        return this;
      };

      View.prototype.confirm = function() {
        var onConfirm;
        onConfirm = this.opts.onConfirm;
        return onConfirm && onConfirm();
      };

      View.prototype.cancel = function() {
        var onCancel;
        onCancel = this.opts.onCancel;
        return onCancel && onCancel();
      };

      View.prototype.close = function() {
        return this.$el.remove();
      };

      return View;

    })(B.View);
  });

}).call(this);
