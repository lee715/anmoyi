// Generated by CoffeeScript 1.10.0
(function() {
  var extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },
    hasProp = {}.hasOwnProperty;

  define(['backbone', 'underscore', 'jquery', 'data', 'models/device'], function(B, _, $, Data, model) {
    var Colection;
    return Colection = (function(superClass) {
      extend(Colection, superClass);

      function Colection() {
        return Colection.__super__.constructor.apply(this, arguments);
      }

      Colection.prototype.model = model;

      Colection.prototype.url = '/api/devices';

      Colection.prototype.initialize = function(models, opts) {
        opts || (opts = {});
        if (opts._placeId) {
          this.url = this.url + '?_placeId=' + opts._placeId;
        }
        return this.on('add', function(model, collection) {
          return Data.models[model.id] = model;
        });
      };

      Colection.prototype.querySection = function(opts) {
        var data, self;
        self = this;
        data = opts;
        data.type = 'device';
        data._ = Date.now();
        return $.ajax({
          url: "/api/section",
          data: data,
          json: true
        }).done(function(res, state) {
          return Object.keys(res).forEach(function(key) {
            return self.get(key).set('section', res[key]);
          });
        });
      };

      return Colection;

    })(B.Collection);
  });

}).call(this);
